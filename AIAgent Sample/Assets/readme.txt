Sample 1 - 4各ファイルに、シーンとスクリプトが入っています。

シーンを開くと、概要がオブジェクトのタイトルに書いてあります。
実行してみて、コードを見ると、ある程度わかるようになっています。



AIAgentはあくまで行動決定 + ある程度のサポートを行うアルゴリズムです。
行動決定はConditionとテーブルが、行動決定後はFunctionが行動を実行します。

実行の流れは
1.AIAgent->BeginTableIndexのテーブルから、初期行動となる関数を選出する
2-1.初期行動となる関数が終了した場合、一番上のテーブルからConditionがtrueになるテーブルを検索、見つかったらそのテーブル内の関数を確率で選出します
2-2.再割当て(AIAgent.AllocateFunction)が実行された場合、現在の関数が終了し、2-1のように関数の選出を行います。
2-3.割り込み実行が実行された場合、現在の関数が終了し、割り込み関数が実行されます。


組み方としては、
1.必要であればConditionを作成
2.Functionを作成
3.AIAgentにはめこんでいく, テーブルは優先度順だといい感じ
4.実行！
です。


最もよく見るであろうBaseAIFunctionから派生したFunctionクラスは、EndAIFunction()を実行するか、再割当て等が実行されるまで動き続けます。
Update等に対応するコールバックは実行中以外はコールされないので、Updateと使い分けることができます。
サンプルでは外部から再割当てや割り込みを実行していますが、関数側から再割当てや割り込みももちろんいけます。というかこっちのがよく使うかも。


あくまでベースは行動決定しか行わないので、あとはサンプルを再生 & サンプルソースである程度わかるはず。わからない場合は植村まで。